{"version":3,"sources":["components/createUserForm.js","components/editUser.js","components/usersList.js","js/firebase.js","App.js","index.js"],"names":["CreateUserForm","props","handleUserFormChange","e","target","name","value","setState","user","state","handleCreateUserSubmit","newUserData","addNewUser","intialState","username","email","className","type","placeholder","this","onChange","onClick","bind","Component","EditUser","handleCancelEdit","handleEditMode","handleEditUserSubmit","editedUser","editUserData","editUserSubmit","handleEditUserChange","preventDefault","style","backgroundcolor","UsersList","handleDeleteUser","deletedUser","deleteUser","handleEditUser","editMode","editedUserData","id","key","firebaseDB","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","componentDidMount","database","ref","child","on","snap","previousUserData","forEach","item","push","val","getUsers","userId","set","remove","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78424a22.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass CreateUserForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                username: '',\r\n                email: ''\r\n            }\r\n        }\r\n        this.intialState = this.state\r\n    }\r\n\r\n    handleUserFormChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n            user: {\r\n                ...this.state.user,\r\n                [name]: value,\r\n            }\r\n        });\r\n    }\r\n\r\n    handleCreateUserSubmit = (newUserData) => {\r\n        this.props.addNewUser(newUserData);\r\n        this.setState(this.intialState);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form>\r\n                    <input\r\n                        className='form-input'\r\n                        type='text'\r\n                        name='username'\r\n                        placeholder='enter your Name'\r\n                        value={this.state.user.username}\r\n                        onChange={this.handleUserFormChange}\r\n                    ></input>\r\n                    <input\r\n                        className='form-input'\r\n                        type='email'\r\n                        name='email'\r\n                        value={this.state.user.email}\r\n                        placeholder='enter your email'\r\n                        onChange={this.handleUserFormChange}\r\n                    ></input>\r\n                    <input\r\n                        className='form-button bg-green'\r\n                        type='button'\r\n                        value='Add New User'\r\n                        onClick={this.handleCreateUserSubmit.bind(this, this.state.user)}\r\n                    ></input>\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateUserForm;","import React, { Component } from 'react';\r\n\r\nclass EditUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.user = this.props.user\r\n        this.state = {\r\n            editUserData: {\r\n                username: this.user.username,\r\n                email: this.user.email\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCancelEdit = () => {\r\n        this.props.handleEditMode(false)\r\n    };\r\n\r\n    handleEditUserSubmit = () => {\r\n        const editedUser = this.state.editUserData;\r\n        this.props.editUserSubmit(editedUser);\r\n     //   console.log('editeduser' + JSON.stringify(editedUser));\r\n    };\r\n\r\n    handleEditUserChange = (e) => {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n            editUserData: {\r\n                ...this.state.editUserData,\r\n                [name]: value,\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form style={{ backgroundcolor: \"white\" }}>\r\n                    <input\r\n                        className='form-input'\r\n                        type='text'\r\n                        placeholder='username'\r\n                        name='username'\r\n                        value={this.state.editUserData.username}\r\n                        onChange={this.handleEditUserChange}\r\n                    />\r\n                    <input\r\n                        className='form-input'\r\n                        type='text'\r\n                        placeholder='email'\r\n                        name='email'\r\n                        value={this.state.editUserData.email}\r\n                        onChange={this.handleEditUserChange}\r\n                    />\r\n                    <input\r\n                        className='form-button bg-blue color-white'\r\n                        type='button'\r\n                        value='submit'\r\n                        onClick={this.handleEditUserSubmit.bind(this)}\r\n                    />\r\n                    <input\r\n                        className='form-button bg-blue color-white'\r\n                        type='button'\r\n                        value='cancel'\r\n                        onClick={this.handleCancelEdit}\r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUser;","import React, { Component } from 'react';\r\nimport EditUser from './editUser.js';\r\n\r\nclass UsersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editMode: false\r\n        }\r\n    }\r\n\r\n    handleDeleteUser = (deletedUser) => {\r\n        this.props.deleteUser(deletedUser);\r\n    };\r\n\r\n    handleEditUser = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    };\r\n\r\n    handleEditMode = (value) => {\r\n        this.setState({\r\n            editMode: value\r\n        });\r\n    };\r\n\r\n    editUserSubmit = (editedUserData) => {\r\n        this.props.editUserSubmit(editedUserData, this.props.user.id);\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            this.state.editMode ? (\r\n                <div>\r\n                    <EditUser handleEditMode={this.handleEditMode} user={this.props.user} editUserSubmit={this.editUserSubmit} />\r\n                </div>\r\n            )\r\n                :\r\n                (\r\n                    <div key={this.props.user.id}>\r\n                        <div className='div-table-row'>\r\n                            <div className='div-table-col'>{this.props.user.username}</div>\r\n                            <div className='div-table-col'>{this.props.user.email}</div>\r\n\r\n                            <div className='div-table-col'>\r\n                                <input\r\n                                    className='button'\r\n                                    type='button'\r\n                                    value='Delete'\r\n                                    onClick={this.handleDeleteUser.bind(this, this.props.user)}\r\n                                >\r\n                                </input>\r\n                                <input\r\n                                    className='button'\r\n                                    type='button'\r\n                                    value='Edit'\r\n                                    onClick={this.handleEditUser.bind(this, this.props.user)}\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n        );\r\n    }\r\n}\r\n\r\nexport default UsersList;","import * as firebase from 'firebase';\r\n  \r\n  const  firebaseConfig = {\r\n    apiKey: \"AIzaSyDPKUcFr3n4Z9Pizg7k_8-JfneqmRa8d_k\",\r\n    authDomain: \"react-firebase-crud-77b82.firebaseapp.com\",\r\n    databaseURL: \"https://react-firebase-crud-77b82.firebaseio.com\",\r\n    projectId: \"react-firebase-crud-77b82\",\r\n    storageBucket: \"react-firebase-crud-77b82.appspot.com\",\r\n    messagingSenderId: \"114968668029\",\r\n    appId: \"1:114968668029:web:eee016823689c930518e14\",\r\n    measurementId: \"G-NG89WF12T0\"\r\n  };\r\n  // Initialize Firebase\r\n const firebaseDB = firebase.initializeApp(firebaseConfig);\r\n\r\n export default firebaseDB;\r\n\r\n","import React, { Component } from 'react';\nimport CreateUserForm from './components/createUserForm.js';\nimport UsersList from './components/usersList.js';\nimport './css/index.css';\nimport firebaseDB from './js/firebase.js';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            getUsers: [],\n        }\n    }\n\n    componentDidMount = () => {\n        firebaseDB.database().ref().child('user').on('value', (snap) => {\n            const previousUserData = [];\n            snap.forEach((item) => {\n                previousUserData.push({\n                    id: item.key,\n                    email: item.val().email,\n                    username: item.val().username,\n                });\n            })\n            this.setState({\n                ...this.state.getUsers,\n                getUsers: previousUserData\n            });\n        });\n    }\n\n    editUserSubmit = (editedUserData, userId) => {\n        firebaseDB.database().ref().child('user/' + userId).set(editedUserData);\n       // console.log('user is being edited' + JSON.stringify(editedUserData.firstName));\n    };\n\n    deleteUser = (deletedUser) => {\n        firebaseDB.database().ref().child('user/' + deletedUser.id).remove();\n    }\n\n    addNewUser = (newUserData) => {\n        firebaseDB.database().ref().child('user').push(newUserData);\n    }\n\n    render() {\n        return (\n            <div className='wrapper'>\n                <CreateUserForm addNewUser={this.addNewUser} />\n                <div>\n                    <div className='div-table'>\n                        <div className='div-table-row'>\n                            <div className='div-table-col'>name</div>\n                            <div className='div-table-col'>email</div>\n                            <div className='div-table-col'>action</div>\n                        </div>\n                    </div>\n                    {this.state.getUsers.map((item) => {\n                        return (\n                            <div key={item.id}>\n                                <UsersList user={item} deleteUser={this.deleteUser} editUserSubmit={this.editUserSubmit} />\n                            </div>\n                        )\n                    })\n                    }\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}